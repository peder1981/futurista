"""
Aplica√ß√£o interativa para an√°lise de juros e infla√ß√£o mundial.

Vers√£o modularizada e melhorada do notebook futurista_interativo.ipynb.
"""
import ipywidgets as widgets
from IPython.display import display

from futurista.data_loader import EconomicDataLoader
from futurista.visualizer import EconomicVisualizer
from futurista.exporter import DataExporter

def main():
    """
    Inicializa a aplica√ß√£o interativa.
    """
    print("üîß Carregando dados econ√¥micos...")
    # Carregar dados
    loader = EconomicDataLoader()
    dados = loader.load_historical_data()
    print(f"‚úÖ Dados carregados com sucesso! {dados.shape[0]} registros dispon√≠veis.")
    
    # Configurar interface
    anos_disponiveis = sorted(dados["year"].unique(), reverse=True)
    ano_widget = widgets.Dropdown(options=anos_disponiveis, description="Ano:")
    
    def atualizar_analise(ano):
        """
        Atualiza a an√°lise com base no ano selecionado.
        
        Args:
            ano (int): Ano para an√°lise
        """
        # Filtrar dados
        df = dados[dados["year"] == ano].copy()
        df_sorted = df.sort_values("ratio", ascending=False).reset_index(drop=True)
        
        # Exibir tabela
        EconomicVisualizer.display_markdown_table(df_sorted, ano)
        
        # Criar e exibir mapa
        mapa = EconomicVisualizer.create_choropleth_map(df_sorted, ano)
        mapa.show()
        
        # Criar e exibir gr√°fico de dispers√£o
        scatter = EconomicVisualizer.create_scatter_plot(df_sorted, ano)
        scatter.show()
        
        # Criar e exibir gr√°fico comparativo para os top 10 pa√≠ses
        bar = EconomicVisualizer.create_comparative_bar_chart(df_sorted, ano, top_n=10)
        bar.show()
        
        # Analisar tend√™ncias hist√≥ricas para os top 5 pa√≠ses
        top_countries = df_sorted.head(5)["country"].tolist()
        print(f"\nüìà Analisando tend√™ncias hist√≥ricas para {', '.join(top_countries)}...")
        
        # Gr√°fico de tend√™ncia hist√≥rica
        trend = EconomicVisualizer.create_trend_line_chart(dados, top_countries)
        trend.show()
        
        # Exportar dados
        DataExporter.export_all_formats(df_sorted, ano)
    
    # Conectar widget √† fun√ß√£o
    widgets.interact(atualizar_analise, ano=ano_widget)

if __name__ == "__main__":
    # Executar para uso direto do script
    print("üöÄ Inicializando Futurista App...")
    main()
    
# Para usar em um notebook:
"""
# Execute este c√≥digo em uma c√©lula de notebook para iniciar a aplica√ß√£o
from futurista_app import main
main()
"""
